function Robot(t){this.pose=t;var o={x:t.x,y:t.y,theta:t.theta,transX:t.transX,transY:t.transY};this.reset=function(){this.pose.x=o.x,this.pose.y=o.y,this.pose.theta=o.theta,this.pose.xOld=o.x,this.pose.yOld=o.y,this.pose.thetaOld=o.theta,this.pose.transX=o.transX,this.pose.transY=o.transY,this.encoder.left=0,this.encoder.right=0,this.led.color="#dddddd",this.led.mode=OFF,this.time=0}}function SimpleRobot(){Robot.call(this,{x:240,y:200,theta:0,xOld:240,yOld:200,transX:0,transY:0})}function RobertaRobot(){Robot.call(this,{x:70,y:90,theta:0,xOld:70,yOld:90,transX:0,transY:0})}function RescueRobot(){Robot.call(this,{x:400,y:40,theta:0,xOld:400,yOld:40,transX:0,transY:0})}function DrawRobot(){Robot.call(this,{x:200,y:200,theta:0,xOld:200,yOld:200,transX:0,transY:0}),this.canDraw=!0,this.drawColor="#000000",this.drawWidth=10}function MathRobot(){Robot.call(this,{x:400,y:250,theta:0,xOld:400,yOld:250,transX:-400,transY:-250}),this.canDraw=!0,this.drawColor="#ffffff",this.drawWidth=1}function Scene(t,o,e,r){this.backgroundImg=t,this.robot=e,this.obstacle=r,this.uCtx=o[0],this.bCtx=o[1],this.oCtx=o[2],this.rCtx=o[3],this.playground={x:0,y:0,w:0,h:0},this.wave=0}var SIMATH={};!function(){SIMATH.toRadians=function(t){return t*(Math.PI/180)},SIMATH.toDegree=function(t){return t*(180/Math.PI)},SIMATH.getIntersectionPoint=function(t,o){var e=(t.x1-t.x2)*(o.y1-o.y2)-(t.y1-t.y2)*(o.x1-o.x2);if(0===e) {
    return null;
}var r=((o.x1-o.x2)*(t.x1*t.y2-t.y1*t.x2)-(t.x1-t.x2)*(o.x1*o.y2-o.y1*o.x2))/e,s=((o.y1-o.y2)*(t.x1*t.y2-t.y1*t.x2)-(t.y1-t.y2)*(o.x1*o.y2-o.y1*o.x2))/e;return r<Math.min(t.x1,t.x2)-.01||r>Math.max(t.x1,t.x2)+.01?null:r<Math.min(o.x1,o.x2)-.01||r>Math.max(o.x1,o.x2)+.01?null:s<Math.min(t.y1,t.y2)-.01||s>Math.max(t.y1,t.y2)+.01?null:s<Math.min(o.y1,o.y2)-.01||s>Math.max(o.y1,o.y2)+.01?null:{x:r,y:s}},SIMATH.getLinesFromRect=function(t){return[{x1:t.x,x2:t.x,y1:t.y,y2:t.y+t.h},{x1:t.x,x2:t.x+t.w,y1:t.y,y2:t.y},{x1:t.x+t.w,x2:t.x,y1:t.y+t.h,y2:t.y+t.h},{x1:t.x+t.w,x2:t.x+t.w,y1:t.y+t.h,y2:t.y}]},SIMATH.sqr=function(t){return t*t},SIMATH.getDistance=function(t,o){return SIMATH.sqr(t.x-o.x)+SIMATH.sqr(t.y-o.y)},SIMATH.getDistanceToLine=function(t,o,e){var r=SIMATH.getDistance(o,e);if(0==r) {
    return o;
}var s=((t.x-o.x)*(e.x-o.x)+(t.y-o.y)*(e.y-o.y))/r;return 0>s?o:s>1?e:{x:o.x+s*(e.x-o.x),y:o.y+s*(e.y-o.y)}},SIMATH.rgbToHsv=function(t,o,e){var r,s,i=Math.min(t,o,e),a=Math.max(t,o,e),h=a-i,n=a;return n=Math.floor(a/255*100),0===a?[0,0,0]:(s=Math.floor(h/a*100),r=t===a?(o-e)/h:o===a?2+(e-t)/h:4+(t-o)/h,r=Math.floor(60*r),0>r&&(r+=360),[r,s,n])},SIMATH.getColor=function(t){return t[2]<=10?COLOR_ENUM.BLACK:(t[0]<10||t[0]>350)&&t[1]>90&&t[2]>50?COLOR_ENUM.RED:t[0]>40&&t[0]<70&&t[1]>90&&t[2]>50?COLOR_ENUM.YELLOW:t[0]<50&&t[1]>50&&t[1]<100&&t[2]<50?COLOR_ENUM.BROWN:t[1]<10&&t[2]>90?COLOR_ENUM.WHITE:t[0]>70&&t[0]<160&&t[1]>80?COLOR_ENUM.GREEN:t[0]>200&&t[0]<250&&t[1]>90&&t[2]>50?COLOR_ENUM.BLUE:COLOR_ENUM.NONE}}($),Robot.prototype.geom={x:-20,y:-20,w:40,h:50,color:"#FCCC00"},Robot.prototype.wheelLeft={x:16,y:-8,w:8,h:16,color:"#000000"},Robot.prototype.wheelRight={x:-24,y:-8,w:8,h:16,color:"#000000"},Robot.prototype.wheelBack={x:-2.5,y:30,w:5,h:5,color:"#000000"},Robot.prototype.led={x:0,y:10,color:"#dddddd",mode:""},Robot.prototype.encoder={left:0,right:0},Robot.prototype.colorSensor={x:0,y:-15,rx:0,ry:0,r:5,colorValue:0,color:"grey"},Robot.prototype.lightSensor={x:0,y:-15,rx:0,ry:0,r:5,lightValue:0},Robot.prototype.ultraSensor={x:0,y:-20,rx:0,ry:0,distance:0,u:[],cx:0,cy:0,color:"#FF69B4"},Robot.prototype.touchSensor={x:0,y:-25,x1:0,y1:0,x2:0,y2:0,value:0,color:"#FFCC33"},Robot.prototype.frontLeft={x:22.5,y:-25,rx:0,ry:0,bumped:!1},Robot.prototype.frontRight={x:-22.5,y:-25,rx:0,ry:0,bumped:!1},Robot.prototype.backLeft={x:20,y:30,rx:0,ry:0,bumped:!1},Robot.prototype.backRight={x:-20,y:30,rx:0,ry:0,bumped:!1},Robot.prototype.backMiddle={x:0,y:30,rx:0,ry:0},Robot.prototype.mouse={x:0,y:5,rx:0,ry:0,r:30},Robot.prototype.time=0,Robot.prototype.updatePose=function(t){if(this.pose.theta=(this.pose.theta+2*Math.PI)%(2*Math.PI),this.encoder.left+=t.left*SIM.getDt(),this.encoder.right+=t.right*SIM.getDt(),this.bumpedAready=!1,this.frontLeft.bumped&&t.left>0&&(t.left*=-1,this.bumpedAready=!0),this.backLeft.bumped&&t.left<0&&(t.left*=-1,this.bumpedAready=!0),this.frontRight.bumped&&t.right>0&&(t.right*=-1,this.bumpedAready=!0),this.backRight.bumped&&t.right<0&&(t.right*=-1,this.bumpedAready=!0),t.right==t.left){var o=t.right*SIM.getDt(),e=Math.cos(this.pose.theta)*o,r=Math.sqrt(Math.pow(o,2)-Math.pow(e,2));this.pose.x+=e,o>=0?this.pose.theta<Math.PI?this.pose.y+=r:this.pose.y-=r:this.pose.theta>Math.PI?this.pose.y+=r:this.pose.y-=r}else{var s=TRACKWIDTH/2*((t.left+t.right)/(t.left-t.right)),i=(t.left-t.right)/TRACKWIDTH,a=this.pose.x-s*Math.sin(this.pose.theta),h=this.pose.y+s*Math.cos(this.pose.theta);this.pose.x=Math.cos(i*SIM.getDt())*(this.pose.x-a)-Math.sin(i*SIM.getDt())*(this.pose.y-h)+a,this.pose.y=Math.sin(i*SIM.getDt())*(this.pose.x-a)+Math.cos(i*SIM.getDt())*(this.pose.y-h)+h;{this.pose.theta}this.pose.theta=this.pose.theta+i*SIM.getDt()}var n=Math.sin(this.pose.theta),l=Math.cos(this.pose.theta);this.frontRight=this.translate(n,l,this.frontRight),this.frontLeft=this.translate(n,l,this.frontLeft),this.backRight=this.translate(n,l,this.backRight),this.backLeft=this.translate(n,l,this.backLeft),this.backMiddle=this.translate(n,l,this.backMiddle),this.touchSensor=this.translate(n,l,this.touchSensor),this.colorSensor=this.translate(n,l,this.colorSensor),this.ultraSensor=this.translate(n,l,this.ultraSensor),this.mouse=this.translate(n,l,this.mouse),this.touchSensor.x1=this.frontRight.rx,this.touchSensor.y1=this.frontRight.ry,this.touchSensor.x2=this.frontLeft.rx,this.touchSensor.y2=this.frontLeft.ry},Robot.prototype.translate=function(t,o,e){return e.rx=this.pose.x-e.y*o+e.x*t,e.ry=this.pose.y-e.y*t-e.x*o,e},SimpleRobot.prototype=Object.create(Robot.prototype),SimpleRobot.prototype.constructor=SimpleRobot,RobertaRobot.prototype=Object.create(Robot.prototype),RobertaRobot.prototype.constructor=RobertaRobot,RescueRobot.prototype=Object.create(Robot.prototype),RescueRobot.prototype.constructor=RescueRobot,DrawRobot.prototype=Object.create(Robot.prototype),DrawRobot.prototype.constructor=DrawRobot,DrawRobot.prototype.geom={x:-20,y:-20,w:40,h:40,color:"#FF69B4"},DrawRobot.prototype.touchSensor={x:0,y:-25,x1:0,y1:0,x2:0,y2:0,value:0,color:"#FF69B4"},DrawRobot.prototype.wheelBack={x:-2.5,y:20,w:5,h:5,color:"#999999"},DrawRobot.prototype.led={x:0,y:0,color:"#000000",mode:""},DrawRobot.prototype.frontLeft={x:22.5,y:-25,rx:0,ry:0,bumped:!1},DrawRobot.prototype.frontRight={x:-22.5,y:-25,rx:0,ry:0,bumped:!1},DrawRobot.prototype.backLeft={x:20,y:20,rx:0,ry:0,bumped:!1},DrawRobot.prototype.backRight={x:-20,y:20,rx:0,ry:0,bumped:!1},DrawRobot.prototype.backMiddle={x:0,y:20,rx:0,ry:0},MathRobot.prototype=Object.create(Robot.prototype),MathRobot.prototype.constructor=MathRobot;var SIM=function(){function setBackground(t){return window.removeEventListener("resize",resizeAll),setPause(!0),0===t?(currentBackground+=1,currentBackground>5&&(currentBackground=1)):currentBackground=t,1==currentBackground?robot=new SimpleRobot:2==currentBackground?robot=new DrawRobot:3==currentBackground?robot=new RobertaRobot:4==currentBackground?robot=new RescueRobot:5==currentBackground&&(robot=new MathRobot),setObstacle(),scene=new Scene(img[currentBackground],layers,robot,obstacle),resizeAll(),scene.updateBackgrounds(),scene.drawObjects(),reloadProgram(),window.addEventListener("resize",resizeAll),currentBackground}function getBackground(){return currentBackground}function getDt(){return dt}function setPause(t){t||ready?(t?($(".simForward").removeClass("typcn-media-pause"),$(".simForward").addClass("typcn-media-play")):($(".simForward").removeClass("typcn-media-play"),$(".simForward").addClass("typcn-media-pause")),pause=t):setTimeout(function(){setPause(!1)},100)}function setStep(){stepCounter=-50,setPause(!1)}function setInfo(){info=info===!0?!1:!0}function stopProgram(){setPause(!0),robot.reset(),scene.updateBackgrounds(),reloadProgram()}function init(program){ready=!1,userProgram=program,eval(userProgram),canceled=!1,isDownrobot=!1,isDownObstacle=!1,stepCounter=0,pause=!0,info=!1,robot.reset(),img=[],isIE()&&(imgSrc=imgSrcIE),loadImages(0)}function cancel(){$(window).off("resize"),canceled=!0,removeMouseEvents(),destroyLayers()}function render(){if(canceled) {
    return void cancelAnimationFrame(globalID);
}globalID=requestAnimationFrame(render);var now=(new Date).getTime();dt=now-(time||now),dt/=1e3,time=now,stepCounter+=1,output.left=0,output.right=0,PROGRAM_SIMULATION.isTerminated()||pause?PROGRAM_SIMULATION.isTerminated()&&(reloadProgram(),eval(userProgram),$(".simForward").removeClass("typcn-media-pause"),$(".simForward").addClass("typcn-media-play"),setPause(!0)):(0===stepCounter&&setPause(!0),step(input),setOutput()),robot.updatePose(output),input=scene.updateSensorValues(!pause),scene.drawRobot()}function reloadProgram(){eval(userProgram),$(".simForward").removeClass("typcn-media-pause"),$(".simForward").addClass("typcn-media-play")}function setOutput(){var t=ACTORS.getLeftMotor().getPower();t>100?t=100:-100>t&&(t=-100);var o=ACTORS.getRightMotor().getPower();o>100?o=100:-100>o&&(o=-100),output.left=t*MAXPOWER||0,output.right=o*MAXPOWER||0,robot.led.mode=output.ledMode=LIGHT.getMode()||"OFF",robot.led.color=output.led=LIGHT.getMode()&&"OFF"==LIGHT.getMode()?"#dddddd":LIGHT.getColor()}function setObstacle(){2==currentBackground?(obstacle.x=500,obstacle.y=250,obstacle.w=100,obstacle.h=100,obstacle.img=null,obstacle.color="#33B8CA"):1==currentBackground?(obstacle.x=580,obstacle.y=290,obstacle.w=100,obstacle.h=100,obstacle.img=null,obstacle.color="#33B8CA"):3==currentBackground?(obstacle.x=500,obstacle.y=250,obstacle.w=100,obstacle.h=100,obstacle.img=img[0],obstacle.color=null):5==currentBackground?(obstacle.x=0,obstacle.y=0,obstacle.w=0,obstacle.h=0,obstacle.color=null):(obstacle.x=495,obstacle.y=396,obstacle.w=20,obstacle.h=20,obstacle.color="#33B8CA",obstacle.img=null)}function handleMouseDown(t){t.preventDefault();var o=t.clientX||t.originalEvent.touches[0].pageX,e=t.clientY||t.originalEvent.touches[0].pageY;startX=parseInt(o-offsetX,10)/scale,startY=parseInt(e-offsetY,10)/scale;var r=startX-robot.mouse.rx,s=startY-robot.mouse.ry;isDownrobot=r*r+s*s<robot.mouse.r*robot.mouse.r,isDownObstacle=startX>obstacle.x&&startX<obstacle.x+obstacle.w&&startY>obstacle.y&&startY<obstacle.y+obstacle.h}function handleMouseUp(t){t.preventDefault(),isDownrobot||isDownObstacle||(robot.pose.theta+=SIMATH.toRadians(startX<ground.w/2?-5:5)),$("#robotLayer").css("cursor","auto"),robot instanceof DrawRobot&&(robot.canDraw=!0),isDownrobot=!1,isDownObstacle=!1}function handleMouseOut(t){t.preventDefault(),isDownrobot=!1,isDownObstacle=!1}function handleMouseMove(t){if(t.preventDefault(),isDownrobot||isDownObstacle){$("#robotLayer").css("cursor","pointer");var o=t.clientX||t.originalEvent.touches[0].pageX,e=t.clientY||t.originalEvent.touches[0].pageY;mouseX=parseInt(o-offsetX,10)/scale,mouseY=parseInt(e-offsetY,10)/scale;var r=mouseX-startX,s=mouseY-startY;startX=mouseX,startY=mouseY,isDownrobot?(robot instanceof DrawRobot&&(robot.canDraw=!1),robot.pose.xOld=robot.pose.x,robot.pose.yOld=robot.pose.y,robot.pose.x+=r,robot.pose.y+=s,robot.mouse.rx+=r,robot.mouse.ry+=s):(obstacle.x+=r,obstacle.y+=s,scene.drawObjects())}}function resizeAll(){if(!canceled){canvasOffset=$("#backgroundDiv").offset(),offsetX=canvasOffset.left,offsetY=canvasOffset.top,scene.playground.w=$("#simDiv").width(),scene.playground.h=$(window).height()-offsetY;scale=1,$(window).width()<768?scale=.5:$(window).width()<1024?scale=.7:$(window).width()<1280?scale=.8:$(window).width()>=1920&&(scale=1.5),ground.w=scene.playground.w/scale,ground.h=scene.playground.h/scale,scene.updateBackgrounds(),scene.drawObjects()}}function loadImages(t){t<imgSrc.length-1?(img[t]=new Image,img[t].onload=function(){loadImages(t+1)},img[t].src=imgSrc[t]):(img[t]=new Image,img[t].onload=initScene,img[t].src=imgSrc[t])}function addMouseEvents(){$("#robotLayer").mousedown(function(t){handleMouseDown(t)}),$("#robotLayer").mousemove(function(t){handleMouseMove(t)}),$("#robotLayer").mouseup(function(t){handleMouseUp(t)}),$("#robotLayer").mouseout(function(t){handleMouseOut(t)}),$("#robotLayer").bind("touchmove",function(t){handleMouseMove(t)}),$("#robotLayer").bind("touchleave",function(t){handleMouseOut(t)}),$("#robotLayer").bind("touchstart",function(t){handleMouseDown(t)}),$("#robotLayer").bind("touchend",function(t){handleMouseUp(t)})}function removeMouseEvents(){$("#robotLayer").off("mousedown"),$("#robotLayer").off("mousemove"),$("#robotLayer").off("mouseup"),$("#robotLayer").off("mouseout"),$("#robotLayer").unbind()}function initScene(){layers=createLayers(),scene=new Scene(img[currentBackground],layers,robot,obstacle),setObstacle(),scene.updateBackgrounds(),scene.drawObjects(),scene.drawRobot(),addMouseEvents(),ready=!0,$(window).on("resize",resizeAll),resizeAll(),render()}function createLayers(){$('<canvas id ="unitBackgroundLayer" width='+MAX_WIDTH+" height="+MAX_HEIGHT+"></canvas>").appendTo(document.getElementById("uniDiv"));var t=document.getElementById("unitBackgroundLayer");$('<canvas id ="backgroundLayer" width='+MAX_WIDTH+" height="+MAX_HEIGHT+"></canvas>").appendTo(document.getElementById("backgroundDiv"));var o=document.getElementById("backgroundLayer");$('<canvas id ="objectLayer" width='+MAX_WIDTH+" height="+MAX_HEIGHT+"></canvas>").appendTo(document.getElementById("objectDiv"));var e=document.getElementById("objectLayer");$('<canvas id ="robotLayer" width='+MAX_WIDTH+" height="+MAX_HEIGHT+"></canvas>").appendTo(document.getElementById("robotDiv"));var r=document.getElementById("robotLayer");return[t.getContext("2d"),o.getContext("2d"),e.getContext("2d"),r.getContext("2d")]}function destroyLayers(){for(var t=document.getElementById("backgroundLayer");t.firstChild;) {t.removeChild(myNode.firstChild);}for(t=document.getElementById("unitBackgroundLayer");t.firstChild;) {t.removeChild(myNode.firstChild);}for(t=document.getElementById("objectLayer");t.firstChild;) {t.removeChild(myNode.firstChild);}for(t=document.getElementById("robotLayer");t.firstChild;) {t.removeChild(myNode.firstChild)}}function getScale(){return scale}function getInfo(){return info}function getAverageTimeStep(){return averageTimeStep}function isIE(){var t=window.navigator.userAgent,o=t.indexOf("MSIE "),e=t.indexOf("Trident/");return o>-1||e>-1?!0:!1}var scene,userProgram,layers,canvasOffset,offsetX,offsetY,isDownrobot=!1,isDownObstacle=!1,startX,startY,scale=1,imgSrc=["/js/app/simulation/simBackgrounds/baustelle-02.svg","/js/app/simulation/simBackgrounds/simpleBackground.svg","/js/app/simulation/simBackgrounds/drawBackground.svg","/js/app/simulation/simBackgrounds/robertaBackground.svg","/js/app/simulation/simBackgrounds/rescueBackground.svg","/js/app/simulation/simBackgrounds/mathBackground.svg"],imgSrcIE=["/js/app/simulation/simBackgrounds/baustelle-02.svg","simulation/simBackgrounds/simpleBackground.png","/js/app/simulation/simBackgrounds/drawBackground.png","/js/app/simulation/simBackgrounds/robertaBackground.png","/js/app/simulation/simBackgrounds/rescueBackground.png","/js/app/simulation/simBackgrounds/mathBackground.png"],img,timerStep=0,ready,canceled,currentBackground=1,time,dt=0,pause,stepCounter,info,cP=1,turn=!1,back=!1,encoderTouch=0,start=!1,touch=!1,line=!1,ultra=!1,ground={x:0,y:0,w:500,h:500},obstacle={x:0,y:0,xOld:0,yOld:0,w:0,h:0,wOld:0,hOld:0},obstacleList=[ground,obstacle],input={touch:!1,color:"",light:0,ultrasonic:0,tacho:[0,0],time:0},output={left:0,right:0,led:" ",ledMode:" "},globalID,robot=new SimpleRobot;return{init:init,setPause:setPause,setStep:setStep,setInfo:setInfo,setBackground:setBackground,getBackground:getBackground,stopProgram:stopProgram,obstacleList:obstacleList,output:output,input:input,getScale:getScale,getInfo:getInfo,cancel:cancel,getAverageTimeStep:getAverageTimeStep,getDt:getDt}}();!function(){for(var t=0,o=["ms","moz","webkit","o"],e=0;e<o.length&&!window.requestAnimationFrame;++e) {window.requestAnimationFrame=window[o[e]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[o[e]+"CancelAnimationFrame"]||window[o[e]+"CancelRequestAnimationFrame"];}window.requestAnimationFrame||(window.requestAnimationFrame=function(o){var e=(new Date).getTime(),r=Math.max(0,16-(e-t)),s=window.setTimeout(function(){o(e+r)},r);return t=e+r,s}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(t){clearTimeout(t)})}(),Scene.prototype.updateBackgrounds=function(){this.drawBackground(1,this.uCtx),this.drawBackground()},Scene.prototype.drawBackground=function(t,o){var e=o||this.bCtx,r=t||SIM.getScale();e.restore(),e.clearRect(0,0,MAX_WIDTH,MAX_HEIGHT),e.save(),e.scale(r,r),this.backgroundImg&&e.drawImage(this.backgroundImg,0,0)},Scene.prototype.drawObjects=function(){this.oCtx.clearRect(this.obstacle.xOld-20,this.obstacle.yOld-20,this.obstacle.wOld+40,this.obstacle.hOld+40),this.obstacle.xOld=this.obstacle.x,this.obstacle.yOld=this.obstacle.y,this.obstacle.wOld=this.obstacle.w,this.obstacle.hOld=this.obstacle.h,this.oCtx.restore(),this.oCtx.save(),this.oCtx.scale(SIM.getScale(),SIM.getScale()),this.obstacle.img?this.oCtx.drawImage(this.obstacle.img,this.obstacle.x,this.obstacle.y,this.obstacle.w,this.obstacle.h):this.obstacle.color&&(this.oCtx.fillStyle=this.obstacle.color,this.oCtx.shadowBlur=5,this.oCtx.shadowColor="black",this.oCtx.fillRect(this.obstacle.x,this.obstacle.y,this.obstacle.w,this.obstacle.h))},Scene.prototype.drawRobot=function(){if(this.rCtx.clearRect(0,0,MAX_WIDTH,MAX_HEIGHT),this.rCtx.restore(),this.rCtx.save(),SIM.getInfo()){var t=this.playground.w-40,o=this.playground.w-5,e=20;this.rCtx.fillStyle="rgba(255,255,255,0.5)",this.rCtx.fillRect(t-80,0,this.playground.w,200),this.rCtx.textAlign="end",this.rCtx.font="10px Verdana";var r,s;5===SIM.getBackground()?(r=(this.robot.pose.x+this.robot.pose.transX)/3,s=(-this.robot.pose.y-this.robot.pose.transY)/3,this.rCtx.fillStyle="#ffffff"):(r=this.robot.pose.x+this.robot.pose.transX,s=+this.robot.pose.y+this.robot.pose.transY,this.rCtx.fillStyle="#333333"),this.rCtx.fillText("FPS",t,e),this.rCtx.fillText(Math.round(1/SIM.getDt()),o,e),e+=15,this.rCtx.fillText("Time",t,e),this.rCtx.fillText(Math.round(10*this.robot.time)/10,o,e),e+=15,this.rCtx.fillText("Robot X",t,e),this.rCtx.fillText(Math.round(r),o,e),e+=15,this.rCtx.fillText("Robot Y",t,e),this.rCtx.fillText(Math.round(s),o,e),e+=15,this.rCtx.fillText("Robot θ",t,e),this.rCtx.fillText(Math.round(Math.round(SIMATH.toDegree(this.robot.pose.theta))),o,e),e+=25,this.rCtx.fillText("Motor left",t,e),this.rCtx.fillText(Math.round(this.robot.encoder.left*ENC),o,e),e+=15,this.rCtx.fillText("Motor right",t,e),this.rCtx.fillText(Math.round(this.robot.encoder.right*ENC),o,e),e+=15,this.rCtx.fillText("Touch Sensor",t,e),this.rCtx.fillText(Math.round(this.robot.touchSensor.value),o,e),e+=15,this.rCtx.fillText("Light Sensor",t,e),this.rCtx.fillText(Math.round(Math.round(this.robot.lightSensor.lightValue)),o,e),e+=15,this.rCtx.fillText("Ultra Sensor",t,e),this.rCtx.fillText(Math.round(this.robot.ultraSensor.distance/3),o,e),e+=15,this.rCtx.fillText("Color Sensor",t,e),this.rCtx.beginPath(),this.rCtx.fillStyle=this.robot.colorSensor.color,this.rCtx.rect(o,e,-10,-10),this.rCtx.stroke(),this.rCtx.fill()}this.rCtx.scale(SIM.getScale(),SIM.getScale()),this.rCtx.save(),this.rCtx.translate(this.robot.pose.x,this.robot.pose.y),this.rCtx.rotate(SIMATH.toRadians(SIMATH.toDegree(this.robot.pose.theta)-90)),this.rCtx.scale(1,-1),this.rCtx.lineWidth="2.5",this.rCtx.strokeStyle=this.robot.wheelLeft.color,this.rCtx.beginPath(),this.rCtx.moveTo(this.robot.geom.x-5,0),this.rCtx.lineTo(this.robot.geom.x+this.robot.geom.w+5,0),this.rCtx.stroke(),this.rCtx.fillStyle=this.robot.wheelBack.color,this.rCtx.fillRect(this.robot.wheelBack.x,this.robot.wheelBack.y,this.robot.wheelBack.w,this.robot.wheelBack.h),this.rCtx.shadowBlur=0,this.rCtx.shadowOffsetX=0,this.rCtx.fillStyle=this.robot.touchSensor.color,this.rCtx.fillRect(this.robot.frontRight.x+12.5,this.robot.frontRight.y,20,10),this.rCtx.fillStyle=this.robot.led.color;var i=this.rCtx.createRadialGradient(this.robot.led.x,this.robot.led.y,1,this.robot.led.x,this.robot.led.y,15);i.addColorStop(0,this.robot.led.color),i.addColorStop(.5,this.robot.geom.color),this.rCtx.shadowBlur=5,this.rCtx.shadowColor="black",this.rCtx.fillStyle=i,this.rCtx.beginPath(),this.rCtx.moveTo(this.robot.geom.x+2.5,this.robot.geom.y),this.rCtx.lineTo(this.robot.geom.x+this.robot.geom.w-2.5,this.robot.geom.y),this.rCtx.quadraticCurveTo(this.robot.geom.x+this.robot.geom.w,this.robot.geom.y,this.robot.geom.x+this.robot.geom.w,this.robot.geom.y+2.5),this.rCtx.lineTo(this.robot.geom.x+this.robot.geom.w,this.robot.geom.y+this.robot.geom.h-2.5),this.rCtx.quadraticCurveTo(this.robot.geom.x+this.robot.geom.w,this.robot.geom.y+this.robot.geom.h,this.robot.geom.x+this.robot.geom.w-2.5,this.robot.geom.y+this.robot.geom.h),this.rCtx.lineTo(this.robot.geom.x+2.5,this.robot.geom.y+this.robot.geom.h),this.rCtx.quadraticCurveTo(this.robot.geom.x,this.robot.geom.y+this.robot.geom.h,this.robot.geom.x,this.robot.geom.y+this.robot.geom.h-2.5),this.rCtx.lineTo(this.robot.geom.x,this.robot.geom.y+2.5),this.rCtx.quadraticCurveTo(this.robot.geom.x,this.robot.geom.y,this.robot.geom.x+2.5,this.robot.geom.y),this.rCtx.closePath(),this.rCtx.fill(),this.rCtx.shadowBlur=5,this.rCtx.shadowOffsetX=2,1===this.robot.touchSensor.value?(this.rCtx.fillStyle="red",this.rCtx.fillRect(this.robot.frontRight.x,this.robot.frontRight.y,this.robot.frontLeft.x-this.robot.frontRight.x,3.5)):(this.rCtx.fillStyle=this.robot.touchSensor.color,this.rCtx.fillRect(this.robot.frontRight.x,this.robot.frontRight.y,this.robot.frontLeft.x-this.robot.frontRight.x,3.5)),this.rCtx.shadowBlur=0,this.rCtx.shadowOffsetX=0,this.rCtx.fillStyle=this.robot.led.color,this.rCtx.beginPath(),this.rCtx.arc(this.robot.led.x,this.robot.led.y,2.5,0,2*Math.PI),this.rCtx.fill(),this.rCtx.fillStyle=this.robot.wheelLeft.color,this.rCtx.fillRect(this.robot.wheelLeft.x,this.robot.wheelLeft.y,this.robot.wheelLeft.w,this.robot.wheelLeft.h),this.rCtx.fillStyle=this.robot.wheelRight.color,this.rCtx.fillRect(this.robot.wheelRight.x,this.robot.wheelRight.y,this.robot.wheelRight.w,this.robot.wheelRight.h),this.rCtx.lineWidth="0.5",this.rCtx.beginPath(),this.rCtx.arc(0,-15,this.robot.colorSensor.r,0,2*Math.PI),this.rCtx.fillStyle=this.robot.colorSensor.color,this.rCtx.fill(),this.rCtx.strokeStyle="black",this.rCtx.stroke(),this.rCtx.restore(),this.wave+=WAVE_LENGTH*SIM.getDt(),this.wave=this.wave%WAVE_LENGTH,this.rCtx.lineDashOffset=WAVE_LENGTH-this.wave,this.rCtx.setLineDash([20,40]),this.rCtx.beginPath(),this.rCtx.lineWidth="0.5",this.rCtx.strokeStyle="#555555";for(var a=0;a<this.robot.ultraSensor.u.length;a++) {this.rCtx.moveTo(this.robot.ultraSensor.rx,this.robot.ultraSensor.ry),this.rCtx.lineTo(this.robot.ultraSensor.u[a].x,this.robot.ultraSensor.u[a].y);}this.rCtx.stroke(),this.rCtx.beginPath(),this.rCtx.strokeStyle="black",this.rCtx.moveTo(this.robot.ultraSensor.rx,this.robot.ultraSensor.ry),this.rCtx.lineTo(this.robot.ultraSensor.cx,this.robot.ultraSensor.cy),this.rCtx.stroke(),this.rCtx.lineDashOffset=0,this.rCtx.setLineDash([]),this.robot.canDraw&&(this.bCtx.lineCap="round",this.bCtx.beginPath(),this.bCtx.lineWidth=this.robot.drawWidth,this.bCtx.strokeStyle=this.robot.drawColor,this.bCtx.moveTo(this.robot.pose.xOld,this.robot.pose.yOld),this.bCtx.lineTo(this.robot.pose.x,this.robot.pose.y),this.bCtx.stroke(),this.uCtx.beginPath(),this.uCtx.lineCap="round",this.uCtx.lineWidth=this.robot.drawWidth,this.uCtx.strokeStyle=this.robot.drawColor,this.uCtx.moveTo(this.robot.pose.xOld,this.robot.pose.yOld),this.uCtx.lineTo(this.robot.pose.x,this.robot.pose.y),this.uCtx.stroke(),this.robot.pose.xOld=this.robot.pose.x,this.robot.pose.yOld=this.robot.pose.y)},Scene.prototype.updateSensorValues=function(t){var o={};if(this.robot.touchSensor){this.robot.touchSensor.value=0,this.robot.frontLeft.bumped=!1,this.robot.frontRight.bumped=!1,this.robot.backLeft.bumped=!1,this.robot.backRight.bumped=!1;for(var e=0;e<SIM.obstacleList.length;e++) {
    for(var r=SIMATH.getLinesFromRect(SIM.obstacleList[e]),s=0;s<r.length;s++){var i=SIMATH.getIntersectionPoint({x1:this.robot.frontLeft.rx,x2:this.robot.frontRight.rx,y1:this.robot.frontLeft.ry,y2:this.robot.frontRight.ry},r[s]);if(i){Math.abs(this.robot.frontLeft.rx-i.x)<Math.abs(this.robot.frontRight.rx-i.x)?this.robot.frontLeft.bumped=!0:this.robot.frontRight.bumped=!0,this.robot.touchSensor.value=1;}else{var a=SIMATH.getDistanceToLine({x:this.robot.touchSensor.rx,y:this.robot.touchSensor.ry},{x:r[s].x1,y:r[s].y1},{x:r[s].x2,y:r[s].y2});if(SIMATH.sqr(this.robot.touchSensor.rx-a.x)+SIMATH.sqr(this.robot.touchSensor.ry-a.y)<SIM.getDt()*Math.max(Math.abs(SIM.output.right),Math.abs(SIM.output.left))){this.robot.frontLeft.bumped=!0,this.robot.frontRight.bumped=!0,this.robot.touchSensor.value=1;}else{var i=SIMATH.getIntersectionPoint({x1:this.robot.backLeft.rx,x2:this.robot.backRight.rx,y1:this.robot.backLeft.ry,y2:this.robot.backRight.ry},r[s]);if(i){Math.abs(this.robot.backLeft.rx-i.x)<Math.abs(this.robot.backRight.rx-i.x)?this.robot.backLeft.bumped=!0:this.robot.backRight.bumped=!0;}else{var a=SIMATH.getDistanceToLine({x:this.robot.touchSensor.rx,y:this.robot.touchSensor.ry},{x:r[s].x1,y:r[s].y1},{x:r[s].x2,y:r[s].y2});SIMATH.sqr(this.robot.backMiddle.rx-a.x)+SIMATH.sqr(this.robot.backMiddle.ry-a.y)<SIM.getDt()*Math.max(Math.abs(SIM.output.right),Math.abs(SIM.output.left))&&(this.robot.backLeft.bumped=!0,this.robot.backRight.bumped=!0)}}}}
}1===this.robot.touchSensor.value||this.robot.bumpedAready?(this.robot.touchSensor.value=1,o.touch=!0):o.touch=!1}if(this.robot.colorSensor||this.robot.lightSensor){for(var h=0,n=0,l=0,c=this.uCtx.getImageData(Math.round(this.robot.colorSensor.rx-3),Math.round(this.robot.colorSensor.ry-3),6,6),b=[0,4,16,20,24,44,92,116,120,124,136,140],l=0,u=0;u<c.data.length;u+=24) {
    for(var e=u;u+24>e;e+=4) {b.indexOf(e)<0&&(h+=c.data[e+0],n+=c.data[e+1],l+=c.data[e+2],l++);}
}var d=c.data.length/4-12,x=h/d,y=n/d,g=l/d;this.robot.colorSensor&&(this.robot.colorSensor.colorValue=SIMATH.getColor(SIMATH.rgbToHsv(x,y,g)),o.color=this.robot.colorSensor.colorValue,this.robot.colorSensor.colorValue===COLOR_ENUM.NONE?this.robot.colorSensor.color="grey":this.robot.colorSensor.colorValue===COLOR_ENUM.BLACK?this.robot.colorSensor.color="black":this.robot.colorSensor.colorValue==COLOR_ENUM.WHITE?this.robot.colorSensor.color="white":this.robot.colorSensor.colorValue===COLOR_ENUM.YELLOW?this.robot.colorSensor.color="yellow":this.robot.colorSensor.colorValue===COLOR_ENUM.BROWN?this.robot.colorSensor.color="brown":this.robot.colorSensor.colorValue===COLOR_ENUM.RED?this.robot.colorSensor.color="red":this.robot.colorSensor.colorValue===COLOR_ENUM.BLUE?this.robot.colorSensor.color="blue":this.robot.colorSensor.colorValue===COLOR_ENUM.GREEN&&(this.robot.colorSensor.color="lime")),this.robot.lightSensor&&(this.robot.lightSensor.lightValue=(x+y+g)/3/2.55,o.light=this.robot.lightSensor.lightValue)}if(this.robot.ultraSensor){var f={x1:this.robot.ultraSensor.rx,y1:this.robot.ultraSensor.ry,x2:this.robot.ultraSensor.rx+MAXDIAG*Math.cos(this.robot.pose.theta),y2:this.robot.ultraSensor.ry+MAXDIAG*Math.sin(this.robot.pose.theta)},p={x1:this.robot.ultraSensor.rx,y1:this.robot.ultraSensor.ry,x2:this.robot.ultraSensor.rx+MAXDIAG*Math.cos(this.robot.pose.theta-Math.PI/8),y2:this.robot.ultraSensor.ry+MAXDIAG*Math.sin(this.robot.pose.theta-Math.PI/8)},m={x1:this.robot.ultraSensor.rx,y1:this.robot.ultraSensor.ry,x2:this.robot.ultraSensor.rx+MAXDIAG*Math.cos(this.robot.pose.theta-Math.PI/16),y2:this.robot.ultraSensor.ry+MAXDIAG*Math.sin(this.robot.pose.theta-Math.PI/16)},S={x1:this.robot.ultraSensor.rx,y1:this.robot.ultraSensor.ry,x2:this.robot.ultraSensor.rx+MAXDIAG*Math.cos(this.robot.pose.theta+Math.PI/8),y2:this.robot.ultraSensor.ry+MAXDIAG*Math.sin(this.robot.pose.theta+Math.PI/8)},M={x1:this.robot.ultraSensor.rx,y1:this.robot.ultraSensor.ry,x2:this.robot.ultraSensor.rx+MAXDIAG*Math.cos(this.robot.pose.theta+Math.PI/16),y2:this.robot.ultraSensor.ry+MAXDIAG*Math.sin(this.robot.pose.theta+Math.PI/16)},w=new Array(p,m,f,M,S);this.robot.ultraSensor.distance=MAXDIAG;for(var e=0;e<SIM.obstacleList.length;e++) {
    for(var r=SIMATH.getLinesFromRect(SIM.obstacleList[e]),C=[MAXDIAG,MAXDIAG,MAXDIAG,MAXDIAG,MAXDIAG],s=0;s<r.length;s++) {
        for(var u=0;u<w.length;u++){var i=SIMATH.getIntersectionPoint(w[u],r[s]);if(i){var R=Math.sqrt((i.x-this.robot.ultraSensor.rx)*(i.x-this.robot.ultraSensor.rx)+(i.y-this.robot.ultraSensor.ry)*(i.y-this.robot.ultraSensor.ry));R<this.robot.ultraSensor.distance&&(this.robot.ultraSensor.distance=R,this.robot.ultraSensor.cx=i.x,this.robot.ultraSensor.cy=i.y),R<C[u]&&(this.robot.ultraSensor.u[u]=i,C[u]=R)}}
    }
}o.ultrasonic=this.robot.ultraSensor.distance/3}if(t&&(this.robot.time+=SIM.getDt()),o.time=this.robot.time,this.robot.encoder){var I=[];I[0]=this.robot.encoder.left*ENC,I[1]=this.robot.encoder.right*ENC,o.tacho=I}return o};