package de.fhg.iais.roberta.javaServer.restServices.all;

import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import org.codehaus.jettison.json.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.google.inject.Inject;

import de.fhg.iais.roberta.javaServer.provider.OraData;
import de.fhg.iais.roberta.persistence.util.DbSession;
import de.fhg.iais.roberta.persistence.util.HttpSessionState;
import de.fhg.iais.roberta.robotCommunication.RobotCommunicator;
import de.fhg.iais.roberta.util.AliveData;
import de.fhg.iais.roberta.util.ClientLogger;
import de.fhg.iais.roberta.util.Key;
import de.fhg.iais.roberta.util.Util;
import de.fhg.iais.roberta.util.Util1;

@Path("/admin")
public class ClientAdmin {
    private static final Logger LOG = LoggerFactory.getLogger(ClientAdmin.class);

    private final RobotCommunicator brickCommunicator;

    @Inject
    public ClientAdmin(RobotCommunicator brickCommunicator) {
        this.brickCommunicator = brickCommunicator;
    }

    @POST
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response command(@OraData HttpSessionState httpSessionState, @OraData DbSession dbSession, JSONObject fullRequest) throws Exception {
        AliveData.rememberClientCall();
        new ClientLogger().log(LOG, fullRequest);
        JSONObject response = new JSONObject();
        try {
            JSONObject request = fullRequest.getJSONObject("data");
            String cmd = request.getString("cmd");
            LOG.info("command is: " + cmd);
            response.put("cmd", cmd);
            if ( cmd.equals("init") ) {
                JSONObject server = new JSONObject();
                // TODO this should be declared in properties
                server.put("defaultRobot", "ev3");
                // TODO this should come from robot project properties
                JSONObject robots = new JSONObject();
                robots.put("ev3", "EV3");
                robots.put("nxt", "NXT");
                robots.put("ardu", "Bot'n Roll");
                server.put("robots", robots);
                response.put("server", server);
                LOG.info("success: create init object");
                Util.addSuccessInfo(response, Key.INIT_SUCCESS);
            } else if ( cmd.equals("setToken") ) {
                String token = request.getString("token");
                if ( this.brickCommunicator.aTokenAgreementWasSent(token) ) {
                    httpSessionState.setToken(token);
                    Util.addSuccessInfo(response, Key.TOKEN_SET_SUCCESS);
                    LOG.info("success: token " + token + " is registered in the session");
                } else {
                    Util.addErrorInfo(response, Key.TOKEN_SET_ERROR_NO_ROBOT_WAITING);
                    LOG.info("error: token " + token + " not registered in the session");
                }
            } else if ( cmd.equals("updateFirmware") ) {
                // TODO: This should be moved to update server
                String token = httpSessionState.getToken();
                if ( token != null ) {
                    // everything is fine
                    boolean isPossible = this.brickCommunicator.firmwareUpdateRequested(token);
                    if ( isPossible ) {
                        Util.addSuccessInfo(response, Key.ROBOT_FIRMWAREUPDATE_POSSIBLE);
                    } else {
                        Util.addErrorInfo(response, Key.ROBOT_FIRMWAREUPDATE_IMPOSSIBLE);
                    }
                } else {
                    Util.addErrorInfo(response, Key.ROBOT_NOT_CONNECTED);
                }
            } else if ( cmd.equals("setRobot") ) {
                String robot = request.getString("robot");
                if ( robot != null && httpSessionState.getAllRobotsPluggedIn().contains(robot) ) {
                    System.out.println(httpSessionState.getAllRobotsPluggedIn());
                    Util.addSuccessInfo(response, Key.ROBOT_SET_SUCCESS);
                    if ( httpSessionState.getRobotName() != robot ) {
                        // disconnect previous robot
                        // TODO consider keeping it so that we can switch between robot and simulation
                        //      see: https://github.com/OpenRoberta/robertalab/issues/43
                        this.brickCommunicator.disconnect(httpSessionState.getToken());
                        // TODO remove this and use a communicator
                        if ( robot.equals("oraSim") ) {
                            httpSessionState.setToken("00000000");
                        } else {
                            httpSessionState.setToken("123");
                        }
                        httpSessionState.setRobotName(robot);
                        // TODO get this hard coded data from the robot projects!!!
                        response.put("robot", robot);
                        JSONObject program;
                        JSONObject configuration;
                        JSONObject toolbox;
                        switch ( robot ) {
                            case "ev3":
                                program = new JSONObject();
                                configuration = new JSONObject();
                                toolbox = new JSONObject();
                                toolbox.put(
                                    "beginner",
                                    "<toolbox_set id='toolbox' style='display: none'><category name='TOOLBOX_ACTION' svg='true'><block type='robActions_motorDiff_on_for'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value><value name='DISTANCE'><block type='math_number'><field name='NUM'>20</field></block></value></block><block type='robActions_motorDiff_on'><value name='POWER'><block type='math_number'><field  name='NUM'>30</field></block></value></block><block type='robActions_motorDiff_stop'></block><block type='robActions_motorDiff_turn_for'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value><value name='DEGREE'><block type='math_number'><field name='NUM'>20</field></block></value></block><block type='robActions_motorDiff_turn'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value></block><block type='robActions_display_text'><value name='OUT'><block type='text'><field name='TEXT'>Hallo</field></block></value><value name='COL'><block type='math_number'><field name='NUM'>0</field></block></value><value name='ROW'><block type='math_number'><field name='NUM'>0</field></block></value></block><block type='robActions_display_clear'></block><block type='robActions_play_tone'><value name='FREQUENCE'><block type='math_number'><field name='NUM'>300</field></block></value><value name='DURATION'><block type='math_number'><field name='NUM'>100</field></block></value></block><block type='robActions_play_setVolume'><value name='VOLUME'><block type='math_number'><field name='NUM'>50</field></block></value></block><block type='robActions_brickLight_on'></block><block type='robActions_brickLight_off'></block><block type='robActions_brickLight_reset'></block></category><category name='TOOLBOX_SENSOR' svg='true'><block type='robSensors_touch_isPressed'></block><block type='robSensors_ultrasonic_getSample'><field name='SENSORPORT'>4</field></block><block type='robSensors_colour_getSample'><field name='SENSORPORT'>3</field></block><block type='robSensors_infrared_getSample'><field name='SENSORPORT'>4</field></block><block type='robSensors_encoder_reset'></block><block type='robSensors_encoder_getSample'></block><block type='robSensors_key_isPressed'></block><block type='robSensors_gyro_reset'><field name='SENSORPORT'>2</field></block><block type='robSensors_gyro_getSample'><field name='SENSORPORT'>2</field></block><block type='robSensors_timer_getSample'></block><block type='robSensors_timer_reset'></block></category><category name='TOOLBOX_CONTROL' svg='true'><block type='robControls_if'/><block type='robControls_ifElse'/><block type='robControls_loopForever'/><block type='controls_repeat'></block><block type='robControls_wait_time'><value name='WAIT'><block type='math_number'><field name='NUM'>500</field></block></value></block><block type='robControls_wait_for'><value name='WAIT0'><block type='logic_compare'><value name='A'><block type='robSensors_getSample'></block></value><value name='B'><block type='logic_boolean'></block></value></block></value></block></category><category name='TOOLBOX_LOGIC' svg='true'><block type='logic_compare'/><block type='logic_operation'/><block type='logic_boolean'/></category><category name='TOOLBOX_MATH' svg='true'><block type='math_number'/><block type='math_arithmetic'/></category><category name='TOOLBOX_TEXT' svg='true'><block type='text'/></category><category name='TOOLBOX_COLOUR' svg='true'><block type='robColour_picker'><field name='COLOUR'>#585858</field></block><block type='robColour_picker'><field name='COLOUR'>#000000</field></block><block type='robColour_picker'><field name='COLOUR'>#0057a6</field></block><block type='robColour_picker'><field name='COLOUR'>#00642e</field></block><block type='robColour_picker'><field name='COLOUR'>#f7d117</field></block><block type='robColour_picker'><field name='COLOUR'>#b30006</field></block><block type='robColour_picker'><field name='COLOUR'>#FFFFFF</field></block><block type='robColour_picker'><field name='COLOUR'>#532115</field></block></category><category name='TOOLBOX_VARIABLE' custom='VARIABLE' svg='true'/></toolbox_set>");
                                toolbox.put(
                                    "expert",
                                    "<toolbox_set id='toolbox' style='display: none'><category name='TOOLBOX_ACTION' svg='true'><category name='TOOLBOX_MOVE' svg='true'><block type='robActions_motor_on'><field name='MOTORPORT'>B</field><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value></block><block type='robActions_motor_on_for'><field name='MOTORPORT'>B</field><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value><value name='VALUE'><block type='math_number'><field name='NUM'>1</field></block></value></block><block type='robActions_motor_getPower'><field name='MOTORPORT'>B</field></block><block type='robActions_motor_setPower'><field name='MOTORPORT'>B</field><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value></block><block type='robActions_motor_stop'><field name='MOTORPORT'>A</field></block></category><category name='TOOLBOX_DRIVE' svg='true'><block type='robActions_motorDiff_on_for'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value><value name='DISTANCE'><block type='math_number'><field name='NUM'>20</field></block></value></block><block type='robActions_motorDiff_on'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value></block><block type='robActions_motorDiff_stop'></block><block type='robActions_motorDiff_turn_for'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value><value name='DEGREE'><block type='math_number'><field name='NUM'>20</field></block></value></block><block type='robActions_motorDiff_turn'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value></block></category><category name='TOOLBOX_DISPLAY' svg='true'><block type='robActions_display_text'><value name='OUT'><block type='text'><field name='TEXT'>Hallo</field></block></value><value name='COL'><block type='math_number'><field name='NUM'>0</field></block></value><value name='ROW'><block type='math_number'><field name='NUM'>0</field></block></value></block><block type='robActions_display_picture'><value name='X'><block type='math_number'><field name='NUM'>0</field></block></value><value name='Y'><block type='math_number'><field name='NUM'>0</field></block></value></block><block type='robActions_display_clear'></block></category><category name='TOOLBOX_SOUND' svg='true'><block type='robActions_play_tone'><value name='FREQUENCE'><block type='math_number'><field name='NUM'>300</field></block></value><value name='DURATION'><block type='math_number'><field name='NUM'>100</field></block></value></block><block type='robActions_play_file'></block><block type='robActions_play_setVolume'><value name='VOLUME'><block type='math_number'><field name='NUM'>50</field></block></value></block><block type='robActions_play_getVolume'></block></category><category name='TOOLBOX_LIGHT' svg='true'><block type='robActions_brickLight_on'></block><block type='robActions_brickLight_off'></block><block type='robActions_brickLight_reset'></block></category></category><category name='TOOLBOX_SENSOR' svg='true'><block type='robSensors_touch_isPressed'></block><block type='robSensors_ultrasonic_getSample'><field name='SENSORPORT'>4</field></block><block type='robSensors_colour_getSample'><field name='SENSORPORT'>3</field></block><block type='robSensors_infrared_getSample'><field name='SENSORPORT'>4</field></block><block type='robSensors_encoder_reset'></block><block type='robSensors_encoder_getSample'></block><block type='robSensors_key_isPressed'></block><block type='robSensors_gyro_reset'><field name='SENSORPORT'>2</field></block><block type='robSensors_gyro_getSample'><field name='SENSORPORT'>2</field></block><block type='robSensors_timer_getSample'></block><block type='robSensors_timer_reset'></block></category><category name='TOOLBOX_CONTROL' svg='true'><category name='TOOLBOX_DECISION' svg='true'><block type='robControls_if'/><block type='robControls_ifElse'/></category><category name='TOOLBOX_LOOP' svg='true'><block type='robControls_loopForever'/><block type='controls_repeat_ext'><value name='TIMES'><block type='math_number'><field name='NUM'>10</field></block></value></block><block type='controls_whileUntil'/><block type='robControls_for'><value name='FROM'><block type='math_number'><field name='NUM'>1</field></block></value><value name='TO'><block type='math_number'><field name='NUM'>10</field></block></value><value name='BY'><block type='math_number'><field name='NUM'>1</field></block></value></block><block type='robControls_forEach'/><block type='controls_flow_statements'/></category><category name='TOOLBOX_WAIT' svg='true'><block type='robControls_wait'></block><block type='robControls_wait_time'><value name='WAIT'><block type='math_number'><field name='NUM'>500</field></block></value></block><block type='robControls_wait_for'><value name='WAIT0'><block type='logic_compare'><value name='A'><block type='robSensors_getSample'></block></value><value name='B'><block type='logic_boolean'></block></value></block></value></block></category></category><category name='TOOLBOX_LOGIC' svg='true'><block type='logic_compare'/><block type='logic_operation'/><block type='logic_negate'/><block type='logic_boolean'/><block type='logic_null'/><block type='logic_ternary'/></category><category name='TOOLBOX_MATH' svg='true'><block type='math_number'/><block type='math_arithmetic'/><block type='math_single'/><block type='math_trig'/><block type='math_constant'/><block type='math_number_property'/><block type='robMath_change'><value name='DELTA'><block type='math_number'><field name='NUM'>1</field></block></value></block><block type='math_round'/><block type='math_on_list'/><block type='math_modulo'/><block type='math_constrain'><value name='LOW'><block type='math_number'><field name='NUM'>1</field></block></value><value name='HIGH'><block type='math_number'><field name='NUM'>100</field></block></value></block><block type='math_random_int'><value name='FROM'><block type='math_number'><field name='NUM'>1</field></block></value><value name='TO'><block type='math_number'><field name='NUM'>100</field></block></value></block><block type='math_random_float'/></category><category name='TOOLBOX_TEXT' svg='true'><block type='text'/><block type='robText_join'/><block type='robText_append'></block></category><category name='TOOLBOX_LIST' svg='true'><block type='robLists_create_with'><mutation items='0' list_type='Number'></mutation></block><block type='robLists_create_with'><value name='ADD0'><block type='math_number'></block></value><value name='ADD1'><block type='math_number'></block></value><value name='ADD2'><block type='math_number'></block></value></block>Lists<block type='robLists_repeat'><value name='NUM'><block type='math_number'><field name='NUM'>5</field></block></value></block><block type='robLists_length'/><block type='robLists_isEmpty'/><block type='robLists_indexOf'></block><block type='robLists_getIndex'></block><block type='robLists_setIndex'></block><block type='robLists_getSublist'></block></category><category name='TOOLBOX_COLOUR' svg='true'><block type='robColour_picker'></block></category><category name='TOOLBOX_VARIABLE' custom='VARIABLE' svg='true'/><category name='TOOLBOX_PROCEDURE' custom='PROCEDURE' svg='true'/><category name='TOOLBOX_COMMUNICATION' svg='true'><block type='robCommunication_startConnection'></block><block type='robCommunication_sendBlock'></block><block type='robCommunication_receiveBlock'></block><block type='robCommunication_waitForConnection'></block></category></toolbox_set>");
                                program.put("toolbox", toolbox);
                                program.put(
                                    "prog",
                                    "<block_set xmlns='http://www.w3.org/1999/xhtml'><instance><block type='robControls_start'><field name='DEBUG'>TRUE</field></block></instance></block_set>");
                                response.put("program", program);
                                configuration.put(
                                    "toolbox",
                                    "<toolbox_set id='toolbox' style='display: none'><category name='TOOLBOX_ACTION' svg='true'><block type='robBrick_motor_big'></block><block type='robBrick_motor_middle'></block><block type='robBrick_actor'></block></category><category name='TOOLBOX_SENSOR' svg='true'><block type='robBrick_ultrasonic'></block><block type='robBrick_colour'></block><block type='robBrick_infrared'></block><block type='robBrick_touch'></block><block type='robBrick_gyro'></block></category></toolbox_set>");
                                configuration.put(
                                    "conf",
                                    "<block_set xmlns='http://de.fhg.iais.roberta.blockly'><instance><block type='robBrick_EV3-Brick'><field name='WHEEL_DIAMETER'>5.6</field><field name='TRACK_WIDTH'>18</field><value name='S1'><block type='robBrick_touch'/></value><value name='S2'><block type='robBrick_gyro'></block></value><value name='S3'><block type='robBrick_colour'></block></value><value name='S4'><block type='robBrick_ultrasonic'/></value><value name='MB'><block type='robBrick_motor_big'><field name='MOTOR_REGULATION'>TRUE</field><field name='MOTOR_REVERSE'>OFF</field><field name='MOTOR_DRIVE'>RIGHT</field></block></value><value name='MC'><block type='robBrick_motor_big'><field name='MOTOR_REGULATION'>TRUE</field><field name='MOTOR_REVERSE'>OFF</field><field name='MOTOR_DRIVE'>LEFT</field></block></value></block></instance></block_set>");
                                response.put("configuration", configuration);
                                break;
                            case "nxt":
                                program = new JSONObject();
                                configuration = new JSONObject();
                                toolbox = new JSONObject();
                                toolbox.put(
                                    "beginner",
                                    "<toolbox_set id='toolbox' style='display: none'><category name='TOOLBOX_ACTION' svg='true'><block type='robActions_motorDiff_on_for'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value><value name='DISTANCE'><block type='math_number'><field name='NUM'>20</field></block></value></block><block type='robActions_motorDiff_on'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value></block><block type='robActions_motorDiff_stop' /><block type='robActions_motorDiff_turn_for'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value><value name='DEGREE'><block type='math_number'><field name='NUM'>20</field></block></value></block><block type='robActions_motorDiff_turn'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value></block><block type='robActions_display_text'><value name='OUT'><block type='text'><field name='TEXT'>Hallo</field></block></value><value name='COL'><block type='math_number'><field name='NUM'>0</field></block></value><value name='ROW'><block type='math_number'><field name='NUM'>0</field></block></value></block><block type='robActions_display_clear' /><block type='robActions_play_tone'><value name='FREQUENCE'><block type='math_number'><field name='NUM'>300</field></block></value><value name='DURATION'><block type='math_number'><field name='NUM'>100</field></block></value></block><block type='robActions_play_setVolume'><value name='VOLUME'><block type='math_number'><field name='NUM'>50</field></block></value></block></category><category name='TOOLBOX_SENSOR' svg='true'><block type='robSensors_touch_isPressed'><field name='SENSORPORT'>1</field></block><block type='robSensors_sound_getSample'><field name='SENSORPORT'>2</field></block><block type='robSensors_light_getSample'><field name='SENSORPORT'>3</field></block><block type='robSensors_ultrasonic_getSample'><field name='SENSORPORT'>4</field></block><block type='robSensors_encoder_reset' /><block type='robSensors_encoder_getSample' /><block type='robSensors_key_isPressed' /><block type='robSensors_timer_getSample' /><block type='robSensors_timer_reset' /></category><category name='TOOLBOX_CONTROL' svg='true'><block type='robControls_if' /><block type='robControls_ifElse' /><block type='robControls_loopForever' /><block type='controls_repeat' /><block type='robControls_wait_time'><value name='WAIT'><block type='math_number'><field name='NUM'>500</field></block></value></block><block type='robControls_wait_for'><value name='WAIT0'><block type='logic_compare'><value name='A'><block type='robSensors_getSample' /></value><value name='B'><block type='logic_boolean' /></value></block></value></block></category><category name='TOOLBOX_LOGIC' svg='true'><block type='logic_compare' /><block type='logic_operation' /><block type='logic_boolean' /></category><category name='TOOLBOX_MATH' svg='true'><block type='math_number' /><block type='math_arithmetic' /></category><category name='TOOLBOX_TEXT' svg='true'><block type='text' /></category><category name='TOOLBOX_COLOUR' svg='true'><block type='robColour_picker'><field name='COLOUR'>#585858</field></block><block type='robColour_picker'><field name='COLOUR'>#000000</field></block><block type='robColour_picker'><field name='COLOUR'>#0057a6</field></block><block type='robColour_picker'><field name='COLOUR'>#00642e</field></block><block type='robColour_picker'><field name='COLOUR'>#f7d117</field></block><block type='robColour_picker'><field name='COLOUR'>#b30006</field></block><block type='robColour_picker'><field name='COLOUR'>#FFFFFF</field></block></category><category name='TOOLBOX_VARIABLE' custom='VARIABLE' svg='true' /></toolbox_set>");
                                toolbox.put(
                                    "expert",
                                    "<toolbox_set id='toolbox' style='display: none'><category name='TOOLBOX_ACTION' svg='true'><category name='TOOLBOX_MOVE' svg='true'><block type='robActions_motor_on'><field name='MOTORPORT'>B</field><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value></block><block type='robActions_motor_on_for'><field name='MOTORPORT'>B</field><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value><value name='VALUE'><block type='math_number'><field name='NUM'>1</field></block></value></block><block type='robActions_motor_getPower'><field name='MOTORPORT'>B</field></block><block type='robActions_motor_setPower'><field name='MOTORPORT'>B</field><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value></block><block type='robActions_motor_stop'><field name='MOTORPORT'>B</field></block></category><category name='TOOLBOX_DRIVE' svg='true'><block type='robActions_motorDiff_on_for'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value><value name='DISTANCE'><block type='math_number'><field name='NUM'>20</field></block></value></block><block type='robActions_motorDiff_on'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value></block><block type='robActions_motorDiff_stop' /><block type='robActions_motorDiff_turn_for'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value><value name='DEGREE'><block type='math_number'><field name='NUM'>20</field></block></value></block><block type='robActions_motorDiff_turn'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value></block></category><category name='TOOLBOX_DISPLAY' svg='true'><block type='robActions_display_text'><value name='OUT'><block type='text'><field name='TEXT'>Hallo</field></block></value><value name='COL'><block type='math_number'><field name='NUM'>0</field></block></value><value name='ROW'><block type='math_number'><field name='NUM'>0</field></block></value></block><block type='robActions_display_clear' /></category><category name='TOOLBOX_SOUND' svg='true'><block type='robActions_play_tone'><value name='FREQUENCE'><block type='math_number'><field name='NUM'>300</field></block></value><value name='DURATION'><block type='math_number'><field name='NUM'>100</field></block></value></block><block type='robActions_play_setVolume'><value name='VOLUME'><block type='math_number'><field name='NUM'>50</field></block></value></block><block type='robActions_play_getVolume' /></category><category name='TOOLBOX_LIGHT' svg='true'><block type='robActions_sensorLight_on'><field name='SENSORPORT'>3</field></block></category></category><category name='TOOLBOX_SENSOR' svg='true'><block type='robSensors_touch_isPressed'><field name='SENSORPORT'>1</field></block><block type='robSensors_sound_getSample'><field name='SENSORPORT'>2</field></block><block type='robSensors_colour_getSample'><field name='SENSORPORT'>3</field></block><block type='robSensors_ultrasonic_getSample'><field name='SENSORPORT'>4</field></block><block type='robSensors_encoder_reset' /><block type='robSensors_encoder_getSample' /><block type='robSensors_key_isPressed' /><block type='robSensors_timer_getSample' /><block type='robSensors_timer_reset' /></category><category name='TOOLBOX_CONTROL' svg='true'><category name='TOOLBOX_DECISION' svg='true'><block type='robControls_if' /><block type='robControls_ifElse' /></category><category name='TOOLBOX_LOOP' svg='true'><block type='robControls_loopForever' /><block type='controls_repeat_ext'><value name='TIMES'><block type='math_number'><field name='NUM'>10</field></block></value></block><block type='controls_whileUntil' /><block type='robControls_for'><value name='FROM'><block type='math_number'><field name='NUM'>1</field></block></value><value name='TO'><block type='math_number'><field name='NUM'>10</field></block></value><value name='BY'><block type='math_number'><field name='NUM'>1</field></block></value></block><block type='robControls_forEach' /><block type='controls_flow_statements' /></category><category name='TOOLBOX_WAIT' svg='true'><block type='robControls_wait' /><block type='robControls_wait_time'><value name='WAIT'><block type='math_number'><field name='NUM'>500</field></block></value></block><block type='robControls_wait_for'><value name='WAIT0'><block type='logic_compare'><value name='A'><block type='robSensors_getSample' /></value><value name='B'><block type='logic_boolean' /></value></block></value></block></category></category><category name='TOOLBOX_LOGIC' svg='true'><block type='logic_compare' /><block type='logic_operation' /><block type='logic_negate' /><block type='logic_boolean' /><block type='logic_null' /><block type='logic_ternary' /></category><category name='TOOLBOX_MATH' svg='true'><block type='math_number' /><block type='math_arithmetic' /><block type='math_single' /><block type='math_trig' /><block type='math_constant' /><block type='math_number_property' /><block type='robMath_change'><value name='DELTA'><block type='math_number'><field name='NUM'>1</field></block></value></block><block type='math_round' /><block type='math_on_list' /><block type='math_modulo' /><block type='math_constrain'><value name='LOW'><block type='math_number'><field name='NUM'>1</field></block></value><value name='HIGH'><block type='math_number'><field name='NUM'>100</field></block></value></block><block type='math_random_int'><value name='FROM'><block type='math_number'><field name='NUM'>1</field></block></value><value name='TO'><block type='math_number'><field name='NUM'>100</field></block></value></block><block type='math_random_float' /></category><category name='TOOLBOX_TEXT' svg='true'><block type='text' /><block type='robText_append' /></category><category name='TOOLBOX_LIST' svg='true'><block type='robLists_create_with'><mutation items='0' list_type='Number' /></block><block type='robLists_create_with'><value name='ADD0'><block type='math_number' /></value><value name='ADD1'><block type='math_number' /></value><value name='ADD2'><block type='math_number' /></value></block><block type='robLists_length' /><block type='robLists_isEmpty' /><block type='robLists_indexOf'></block><block type='robLists_getIndex' /><block type='robLists_setIndex' /></category><category name='TOOLBOX_COLOUR' svg='true'><block type='robColour_picker' /></category><category name='TOOLBOX_VARIABLE' custom='VARIABLE' svg='true' /><category name='TOOLBOX_PROCEDURE' custom='PROCEDURE' svg='true' /><category name='TOOLBOX_COMMUNICATION' svg='true'><block type='robCommunication_connection' /><block type='robCommunication_sendBlock'><value name='CONNECTION'><block type='robCommunication_connection' /></value></block><block type='robCommunication_receiveBlock'><value name='CONNECTION'><block type='robCommunication_connection' /></value></block><block type='robCommunication_checkConnection'><value name='CONNECTION'><block type='robCommunication_connection'></block></value></block></category></toolbox_set>");
                                program.put("toolbox", toolbox);
                                program.put(
                                    "prog",
                                    "<block_set xmlns='http://www.w3.org/1999/xhtml'><instance><block type='robControls_start'><field name='DEBUG'>TRUE</field></block></instance></block_set>");
                                response.put("program", program);
                                configuration.put(
                                    "toolbox",
                                    "<toolbox_set id='toolbox' style='display: none'><category name='TOOLBOX_ACTION' svg='true'><block type='robBrick_motor_big' /><block type='robBrick_actor' /></category><category name='TOOLBOX_SENSOR' svg='true'><block type='robBrick_touch' /><block type='robBrick_sound' /><block type='robBrick_light' /><block type='robBrick_ultrasonic' /><block type='robBrick_colour' /></category></toolbox_set>");
                                configuration.put(
                                    "conf",
                                    "<block_set xmlns='http://de.fhg.iais.roberta.blockly'><instance><block type='robBrick_EV3-Brick'><field name='WHEEL_DIAMETER'>5.6</field><field name='TRACK_WIDTH'>12</field><value name='S1'><block type='robBrick_touch' /></value><value name='S2'><block type='robBrick_sound' /></value><value name='S3'><block type='robBrick_light' /></value><value name='S4'><block type='robBrick_ultrasonic' /></value><value name='MB'><block type='robBrick_motor_big'><field name='MOTOR_REGULATION'>TRUE</field><field name='MOTOR_REVERSE'>OFF</field><field name='MOTOR_DRIVE'>RIGHT</field></block></value><value name='MC'><block type='robBrick_motor_big'><field name='MOTOR_REGULATION'>TRUE</field><field name='MOTOR_REVERSE'>OFF</field><field name='MOTOR_DRIVE'>LEFT</field></block></value></block></instance></block_set>");
                                response.put("configuration", configuration);
                                break;
                            case "ardu":
                                program = new JSONObject();
                                configuration = new JSONObject();
                                toolbox = new JSONObject();
                                toolbox.put(
                                    "beginner",
                                    "<toolbox_set id='toolbox' style='display: none'><category name='TOOLBOX_ACTION' svg='true'><block type='robActions_motorDiff_on_for'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value><value name='DISTANCE'><block type='math_number'><field name='NUM'>20</field></block></value></block><block type='robActions_motorDiff_on'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value></block><block type='robActions_motorDiff_stop' /><block type='robActions_motorDiff_turn_for'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value><value name='DEGREE'><block type='math_number'><field name='NUM'>20</field></block></value></block><block type='robActions_motorDiff_turn'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value></block><block type='robActions_display_text'><value name='OUT'><block type='text'><field name='TEXT'>Hallo</field></block></value><value name='COL'><block type='math_number'><field name='NUM'>0</field></block></value><value name='ROW'><block type='math_number'><field name='NUM'>0</field></block></value></block><block type='robActions_display_clear' /><block type='robActions_play_tone'><value name='FREQUENCE'><block type='math_number'><field name='NUM'>300</field></block></value><value name='DURATION'><block type='math_number'><field name='NUM'>100</field></block></value></block><block type='robActions_play_setVolume'><value name='VOLUME'><block type='math_number'><field name='NUM'>50</field></block></value></block></category><category name='TOOLBOX_SENSOR' svg='true'><block type='robSensors_touch_isPressed'><field name='SENSORPORT'>1</field></block><block type='robSensors_sound_getSample'><field name='SENSORPORT'>2</field></block><block type='robSensors_light_getSample'><field name='SENSORPORT'>3</field></block><block type='robSensors_ultrasonic_getSample'><field name='SENSORPORT'>4</field></block><block type='robSensors_encoder_reset' /><block type='robSensors_encoder_getSample' /><block type='robSensors_key_isPressed' /><block type='robSensors_timer_getSample' /><block type='robSensors_timer_reset' /></category><category name='TOOLBOX_CONTROL' svg='true'><block type='robControls_if' /><block type='robControls_ifElse' /><block type='robControls_loopForever' /><block type='controls_repeat' /><block type='robControls_wait_time'><value name='WAIT'><block type='math_number'><field name='NUM'>500</field></block></value></block><block type='robControls_wait_for'><value name='WAIT0'><block type='logic_compare'><value name='A'><block type='robSensors_getSample' /></value><value name='B'><block type='logic_boolean' /></value></block></value></block></category><category name='TOOLBOX_LOGIC' svg='true'><block type='logic_compare' /><block type='logic_operation' /><block type='logic_boolean' /></category><category name='TOOLBOX_MATH' svg='true'><block type='math_number' /><block type='math_arithmetic' /></category><category name='TOOLBOX_TEXT' svg='true'><block type='text' /></category><category name='TOOLBOX_COLOUR' svg='true'><block type='robColour_picker'><field name='COLOUR'>#585858</field></block><block type='robColour_picker'><field name='COLOUR'>#000000</field></block><block type='robColour_picker'><field name='COLOUR'>#0057a6</field></block><block type='robColour_picker'><field name='COLOUR'>#00642e</field></block><block type='robColour_picker'><field name='COLOUR'>#f7d117</field></block><block type='robColour_picker'><field name='COLOUR'>#b30006</field></block><block type='robColour_picker'><field name='COLOUR'>#FFFFFF</field></block></category><category name='TOOLBOX_VARIABLE' custom='VARIABLE' svg='true' /></toolbox_set>");
                                toolbox.put(
                                    "expert",
                                    "<toolbox_set id='toolbox' style='display: none'><category name='TOOLBOX_ACTION' svg='true'><category name='TOOLBOX_MOVE' svg='true'><block type='robActions_motor_on'><field name='MOTORPORT'>B</field><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value></block><block type='robActions_motor_on_for'><field name='MOTORPORT'>B</field><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value><value name='VALUE'><block type='math_number'><field name='NUM'>1</field></block></value></block><block type='robActions_motor_getPower'><field name='MOTORPORT'>B</field></block><block type='robActions_motor_setPower'><field name='MOTORPORT'>B</field><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value></block><block type='robActions_motor_stop'><field name='MOTORPORT'>B</field></block></category><category name='TOOLBOX_DRIVE' svg='true'><block type='robActions_motorDiff_on_for'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value><value name='DISTANCE'><block type='math_number'><field name='NUM'>20</field></block></value></block><block type='robActions_motorDiff_on'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value></block><block type='robActions_motorDiff_stop' /><block type='robActions_motorDiff_turn_for'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value><value name='DEGREE'><block type='math_number'><field name='NUM'>20</field></block></value></block><block type='robActions_motorDiff_turn'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value></block></category><category name='TOOLBOX_DISPLAY' svg='true'><block type='robActions_display_text'><value name='OUT'><block type='text'><field name='TEXT'>Hallo</field></block></value><value name='COL'><block type='math_number'><field name='NUM'>0</field></block></value><value name='ROW'><block type='math_number'><field name='NUM'>0</field></block></value></block><block type='robActions_display_clear' /></category><category name='TOOLBOX_SOUND' svg='true'><block type='robActions_play_tone'><value name='FREQUENCE'><block type='math_number'><field name='NUM'>300</field></block></value><value name='DURATION'><block type='math_number'><field name='NUM'>100</field></block></value></block><block type='robActions_play_setVolume'><value name='VOLUME'><block type='math_number'><field name='NUM'>50</field></block></value></block><block type='robActions_play_getVolume' /></category><category name='TOOLBOX_LIGHT' svg='true'><block type='robActions_sensorLight_on'><field name='SENSORPORT'>3</field></block></category></category><category name='TOOLBOX_SENSOR' svg='true'><block type='robSensors_touch_isPressed'><field name='SENSORPORT'>1</field></block><block type='robSensors_sound_getSample'><field name='SENSORPORT'>2</field></block><block type='robSensors_colour_getSample'><field name='SENSORPORT'>3</field></block><block type='robSensors_ultrasonic_getSample'><field name='SENSORPORT'>4</field></block><block type='robSensors_encoder_reset' /><block type='robSensors_encoder_getSample' /><block type='robSensors_key_isPressed' /><block type='robSensors_timer_getSample' /><block type='robSensors_timer_reset' /></category><category name='TOOLBOX_CONTROL' svg='true'><category name='TOOLBOX_DECISION' svg='true'><block type='robControls_if' /><block type='robControls_ifElse' /></category><category name='TOOLBOX_LOOP' svg='true'><block type='robControls_loopForever' /><block type='controls_repeat_ext'><value name='TIMES'><block type='math_number'><field name='NUM'>10</field></block></value></block><block type='controls_whileUntil' /><block type='robControls_for'><value name='FROM'><block type='math_number'><field name='NUM'>1</field></block></value><value name='TO'><block type='math_number'><field name='NUM'>10</field></block></value><value name='BY'><block type='math_number'><field name='NUM'>1</field></block></value></block><block type='robControls_forEach' /><block type='controls_flow_statements' /></category><category name='TOOLBOX_WAIT' svg='true'><block type='robControls_wait' /><block type='robControls_wait_time'><value name='WAIT'><block type='math_number'><field name='NUM'>500</field></block></value></block><block type='robControls_wait_for'><value name='WAIT0'><block type='logic_compare'><value name='A'><block type='robSensors_getSample' /></value><value name='B'><block type='logic_boolean' /></value></block></value></block></category></category><category name='TOOLBOX_LOGIC' svg='true'><block type='logic_compare' /><block type='logic_operation' /><block type='logic_negate' /><block type='logic_boolean' /><block type='logic_null' /><block type='logic_ternary' /></category><category name='TOOLBOX_MATH' svg='true'><block type='math_number' /><block type='math_arithmetic' /><block type='math_single' /><block type='math_trig' /><block type='math_constant' /><block type='math_number_property' /><block type='robMath_change'><value name='DELTA'><block type='math_number'><field name='NUM'>1</field></block></value></block><block type='math_round' /><block type='math_on_list' /><block type='math_modulo' /><block type='math_constrain'><value name='LOW'><block type='math_number'><field name='NUM'>1</field></block></value><value name='HIGH'><block type='math_number'><field name='NUM'>100</field></block></value></block><block type='math_random_int'><value name='FROM'><block type='math_number'><field name='NUM'>1</field></block></value><value name='TO'><block type='math_number'><field name='NUM'>100</field></block></value></block><block type='math_random_float' /></category><category name='TOOLBOX_TEXT' svg='true'><block type='text' /><block type='robText_append' /></category><category name='TOOLBOX_LIST' svg='true'><block type='robLists_create_with'><mutation items='0' list_type='Number' /></block><block type='robLists_create_with'><value name='ADD0'><block type='math_number' /></value><value name='ADD1'><block type='math_number' /></value><value name='ADD2'><block type='math_number' /></value></block><block type='robLists_length' /><block type='robLists_isEmpty' /><block type='robLists_indexOf'></block><block type='robLists_getIndex' /><block type='robLists_setIndex' /></category><category name='TOOLBOX_COLOUR' svg='true'><block type='robColour_picker' /></category><category name='TOOLBOX_VARIABLE' custom='VARIABLE' svg='true' /><category name='TOOLBOX_PROCEDURE' custom='PROCEDURE' svg='true' /><category name='TOOLBOX_COMMUNICATION' svg='true'><block type='robCommunication_connection' /><block type='robCommunication_sendBlock'><value name='CONNECTION'><block type='robCommunication_connection' /></value></block><block type='robCommunication_receiveBlock'><value name='CONNECTION'><block type='robCommunication_connection' /></value></block><block type='robCommunication_checkConnection'><value name='CONNECTION'><block type='robCommunication_connection'></block></value></block></category></toolbox_set>");
                                program.put("toolbox", toolbox);
                                program.put(
                                    "prog",
                                    "<block_set xmlns='http://www.w3.org/1999/xhtml'><instance><block type='robControls_start'><field name='DEBUG'>TRUE</field></block></instance></block_set>");
                                response.put("program", program);
                                configuration.put(
                                    "toolbox",
                                    "<toolbox_set id='toolbox' style='display: none'><category name='TOOLBOX_ACTION' svg='true'><block type='robBrick_motor_big' /><block type='robBrick_actor' /></category><category name='TOOLBOX_SENSOR' svg='true'><block type='robBrick_touch' /><block type='robBrick_sound' /><block type='robBrick_light' /><block type='robBrick_ultrasonic' /><block type='robBrick_colour' /></category></toolbox_set>");
                                configuration.put(
                                    "conf",
                                    "<block_set xmlns='http://de.fhg.iais.roberta.blockly'><instance><block type='robBrick_EV3-Brick'><field name='WHEEL_DIAMETER'>5.6</field><field name='TRACK_WIDTH'>12</field><value name='S1'><block type='robBrick_touch' /></value><value name='S2'><block type='robBrick_sound' /></value><value name='S3'><block type='robBrick_light' /></value><value name='S4'><block type='robBrick_ultrasonic' /></value><value name='MB'><block type='robBrick_motor_big'><field name='MOTOR_REGULATION'>TRUE</field><field name='MOTOR_REVERSE'>OFF</field><field name='MOTOR_DRIVE'>RIGHT</field></block></value><value name='MC'><block type='robBrick_motor_big'><field name='MOTOR_REGULATION'>TRUE</field><field name='MOTOR_REVERSE'>OFF</field><field name='MOTOR_DRIVE'>LEFT</field></block></value></block></instance></block_set>");
                                response.put("configuration", configuration);
                                break;
                        }
                        LOG.info("set robot to {}", robot);
                    } else {
                        LOG.info("set Robot: robot {} was already set", robot);
                    }
                } else {
                    LOG.error("Invalid command: " + cmd + " setting robot name to " + robot);
                    Util.addErrorInfo(response, Key.COMMAND_INVALID);
                }
            } else {
                LOG.error("Invalid command: " + cmd);
                Util.addErrorInfo(response, Key.COMMAND_INVALID);
            }
            dbSession.commit();
        } catch ( Exception e ) {
            dbSession.rollback();
            String errorTicketId = Util1.getErrorTicketId();
            LOG.error("Exception. Error ticket: " + errorTicketId, e);
            Util.addErrorInfo(response, Key.SERVER_ERROR).append("parameters", errorTicketId);
        } finally {
            if ( dbSession != null ) {
                dbSession.close();
            }
        }
        Util.addFrontendInfo(response, httpSessionState, this.brickCommunicator);
        return Response.ok(response).build();
    }
}