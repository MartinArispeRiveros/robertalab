General Remarks For Using OpenRoberta From The Command Line.

The OpenRoberta sources are contained in a git repository. Top level is a script 'ora.sh' to be used from the command line. After
building the software artifacts by calling 'mvn install' from the directory 'OpenRobertaParent' (this is the mvn parent project of
OpenRoberta), 'ora.sh' may be used to configure the OpenRoberta application.

The application uses a hsqldb database. The database may be used in embedded or server mode, depending on setting a variable in 'ora.sh'.

  --export {-createemptydb} INSTALLATION-DIR  create a self-contained installation with an empty database (-createemptydb).
                           If the database is not created, you are responsible to copy a usable database into directory 'db'. 
			                     The installation dir must NOT exist.
  --sqlclient              start a sql client. Use as default the variable 'databaseurl' to address the database (see its
                           value in 'ora.sh').
                           If the database is run in 'standalone' mode, this command fails if the openroberta server is running.
                           If the database is run in 'server' mode, you get access to the database used by
                           the server at the same time. Make SURE, that you
                           - DONT block the server (e.g. by issuing insert/updates without committing immediately afterwards)
                           - DONT terminate the database server by issuing a SHUTDOWN command

  --start-from-git {-reset} if a developer wants to start the server from a Git working tree in embedded mode (that is fine for
                           test/debug), use this command. Note, that running the server from eclipse is preferred.
                           With the optional parameter '-reset' the database will be reset to the state of dbBase.
                           Note, that running the command '--reset-db' makes sense to set the database to the default state again.

  --help                   get help
  --java                   check whether java and javac are on the path and the JDK versin matches. Show the java version

  --alive {SERVERURL} {-q} {EVERY} {TIMEOUT} {MAIL} check after EVERY sec (default: 60) if the server is alive.
                           The server is assumed to have crashed, if it does not answer within TIMEOUT sec (default: 10).
                           If the server is assumed to have crashed, send a mail by calling the script MAIL (default: NO)
                           -q is the quiet mode: report crashes only
                           a usefull call, reporting to stdout, is e.g. ora.sh --alive localhost:1999 60 10

  --update-lejos {SERVERURL} update an ev3 robot running the lejos os. Its ip-address is expected in lejosipaddr.
                           If a password is requested: it is "", thus simply hit 'return'
                           - scp the ev3menu.jar, which replaces the original lejos menu
                           - scp openroberta specific libraries needed by the user programs at runtime
                           - create a file on the lejos based robot with the address of the server

  --reset-db               copies the "default" database from directory 'dbBase' to 'db'.
                           this makes sense, if you changed the db during test and you dont want to commit your changes
  --createemptydb DB-NAME  create an empty database with all tables and initial rows as needed for the OpenRoberta server
                           Needs a data base name as a prefix for the files/directory to be created.
                           if the database exists, it is not recreated. If a table "PROGRAM" is found
                           in an existing database, it is assumed, that the setup has already been done.
