General Remarks For Using OpenRoberta From The Command Line.

The OpenRoberta sources are contained in a git repository. First generate the software artifacts by calling
'mvn clean install' from the directory 'OpenRobertaParent' (this is the mvn parent project of OpenRoberta).
Top level in the git repository is a script 'ora.sh' to be used from the command line to configure the OpenRoberta application.
Remark about the database:
The database may be run in 'embedded' mode,
- the DATABASEURL is "jdbc:hsqldb:file:<some-basedir>/db-<serverversion>/openroberta-db", for instance:
  jdbc:hsqldb:file:OpenRobertaServer/db-2.2.7/openroberta-db
- the database is locked by the process accessing the database. Thus no concurrent access is possible (with a sql client, for instance).
The database may be run in 'server' mode,
- the DATABASEURL is "jdbc:hsqldb:hsql://localhost/openroberta-db"
- you can get access to the database used by the server with a sql client, for instance. Access is concurrent. Be careful and ...
    - better set autocommit to off and DON'T terminate the database server with SHUTDOWN by mistake
    - DON'T block the server (e.g. by issuing an insert/update without committing immediately afterwards)
  Server mode is great, because ...
    - you can inspect the database using the sql client
    - Backup of a running server can be done with (read the manual about blocking/not blocking)
      BACKUP DATABASE TO 'single-quoted-directory-path-terminated-with-/' {NOT} BLOCKING
    - from time to time a CHECKPOINT statement may be issued to reduce resource usage and startup time.

Commands of the ora.sh script:
  --export INSTALLATION-DIR create a self-contained installation. You are responsible to copy a usable database into directory 'db-<serverVersion>'. 
                            The installation dir must NOT exist. In the INSTALLATION-DIR there are two scripts for starting OpenRoberta:
                            - start-ora-server-with-db-embedded.sh   uses an embedded hsqldb. For small systems (Raspberry Pi, for instance)
                            - start-ora-server-and-db-server.sh      starts database and a server process. For large system (the official release, e.g.)

  --sqlclient DATABASEURL   start a sql client.
                            - this command fails if the openroberta server is running in embedded mode. You have to terminate the server to get access.
                            - if the database is used by an openroberta server in server mode, the sql client and the server have access to the database.
                              Be careful not to block the server.

  --help                    get help
  
  --java                    check whether java and javac are on the path and the JDK version is ok.

  --alive {SERVERURL} {-q} {EVERY} {TIMEOUT} {MAIL} check after EVERY sec (default: 60) if the server is alive.
                           The server is assumed to have crashed, if it does not answer within TIMEOUT sec (default: 10).
                           If the server is assumed to have crashed, send a mail by calling the script MAIL (default: NO)
                           -q is the quiet mode: report crashes only
                           a usefull call, reporting to stdout, is e.g. ora.sh --alive localhost:1999 60 10

  --start-from-git          FOR DEVELOPERS ONLY: if a developer wants to start the server from a Git working tree in embedded mode
                            (that is fine for test), use this command.
                            Note, that running the server from an IDE as eclipse is PREFERRED.
                            Note, that running '--reset-db' before starting may the server resets the database to a default state.

  --update-lejos {SERVERURL} {LEJOSVERSION} FOR DEVELOPERS ONLY: update an ev3 robot running the lejos os. Its ip-address is expected in lejosipaddr.
                            If a password is requested: it is "", thus simply hit 'return'
                            - scp the ev3menu.jar, which replaces the original lejos menu
                            - scp openroberta specific libraries needed by the user programs at runtime
                            - create a file on the lejos based robot with the address of the server

  --reset-db                FOR DEVELOPERS ONLY: copies the "default" database from directory 'dbBase' to 'db-<VERSION>'. <VERSION> is
                            the actual version of the server.
                            Do this if you changed the db during testing and you want to undo your changes

  --createEmptydb           FOR DEVELOPERS ONLY: create an empty database with all tables and initial rows as needed for the OpenRoberta server
                            at path "OpenRobertaServer/dbEmpty".
                            - if the database exists, it is not recreated
                            - if a table "PROGRAM" is found, it is assumed, that the setup has already been done and nothing happens.

  --resetDbBase             FOR DEVELOPERS ONLY: take the empty database OpenRobertaServer/dbEmpty and copy it to OpenRobertaServer/dbBase.
                            Used only if the default database has to be resetted and filled with new default users, programs, etc. A rare case.
							