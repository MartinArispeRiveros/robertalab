General Remarks For Using OpenRoberta From The Command Line.

The OpenRoberta sources are contained in a git repository. Top level is a script 'ora.sh' to be used from the command line. After
building the software artifacts by calling 'mvn install' from the directory 'OpenRobertaParent' (this is the mvn parent project of
OpenRoberta), 'ora.sh' may be used to configure the OpenRoberta application.

The application uses a hsqldb database. The database may be used in embedded or server mode, depending on setting a variable in 'ora.sh'.

  --export INSTALLATION-DIR DATABASE_MODE create a self-contained installation. You are responsible to copy a usable database into directory 'db-<serverVersion>'. 
                           The installation dir must NOT exist. The database mode may be either 'embedded' or 'server'.

  --sqlclient DATABASEURL  start a sql client.
                           If the database is run in 'embedded' mode,
                           - the DATABASEURL is "jdbc:hsqldb:file:<parentdir-of-db-dir>/db-<serverversion>/openroberta-db", for instance:
                             jdbc:hsqldb:file:OpenRobertaServer/db-2.2.0/openroberta-db
                           - this command fails if the openroberta server is running, because then the database is locked.
                           If the database is run in 'server' mode,
                           - the DATABASEURL is "jdbc:hsqldb:hsql://localhost/openroberta-db"
                           - you get access to the database used by the server at the same time. This is great, but ...
                             - better set autocommit to off and DON'T terminate the database server with SHUTDOWN by mistake
                             - DON'T block the server (e.g. by issuing insert/updates without committing immediately afterwards)
                             - Backup of a running server can be done with (read the manual about blocking/not blocking)
                               BACKUP DATABASE to 'single-quoted-directory-path-terminated-with-/' {NOT} BLOCKING
                             - from time to time issue a CHECKPOINT statement to reduce the resource usage and the startup time.

  --start-from-git         if a developer wants to start the server from a Git working tree in embedded mode (that is fine for
                           test/debug), use this command. Note, that running the server from eclipse is preferred.
                           Note, that running '--reset-db' before starting may the server resets the database to a default state.

  --help                   get help
  
  --java                   check whether java and javac are on the path and the JDK versin matches. Show the java version

  --alive {SERVERURL} {-q} {EVERY} {TIMEOUT} {MAIL} check after EVERY sec (default: 60) if the server is alive.
                           The server is assumed to have crashed, if it does not answer within TIMEOUT sec (default: 10).
                           If the server is assumed to have crashed, send a mail by calling the script MAIL (default: NO)
                           -q is the quiet mode: report crashes only
                           a usefull call, reporting to stdout, is e.g. ora.sh --alive localhost:1999 60 10

  --update-lejos {SERVERURL} update an ev3 robot running the lejos os. Its ip-address is expected in lejosipaddr.
                           If a password is requested: it is "", thus simply hit 'return'
                           - scp the ev3menu.jar, which replaces the original lejos menu
                           - scp openroberta specific libraries needed by the user programs at runtime
                           - create a file on the lejos based robot with the address of the server

  --reset-db VERSION       copies the "default" database from directory 'dbBase' to 'db-<VERSION>'.
                           this makes sense, if you changed the db during test and you want to undo your changes

  --createemptydb DB-PATH  create an empty database with all tables and initial rows as needed for the OpenRoberta server
                           Needs a data base path including a server version and the database name like "OpenRobertaServer/db-9.9.9/openroberta-db".
                           if the database exists, it is not recreated. If a table "PROGRAM" is found
                           in an existing database, it is assumed, that the setup has already been done.
