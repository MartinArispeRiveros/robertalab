// This file is automatically generated by the Open Roberta Lab.
#undef max
#undef min
#define _SENSEBOX_INCLUDES
#include <NEPODefs.h>
#include "SenseBoxMCU.h"
    
unsigned long _time = millis();

unsigned int item;
unsigned int item2;
char* _ID1 = "";
int _led_R2 = 8;
BMX055 _bmx055_A;

int _getValueFromBmx(int axis, int mode) {
    int _x_axis;
    int _y_axis;
    int _z_axis;
    switch (mode) {
        case 1:
            _bmx055_A.getAcceleration(&_x_axis, &_y_axis, &_z_axis);
            break;
        case 2:
            _bmx055_A.getRotation(&_x_axis, &_y_axis, &_z_axis);
            break;
        case 3:
            _bmx055_A.getMagnet(&_x_axis, &_y_axis, &_z_axis);
            break;
    }
    switch (axis) {
        case 1:
            return _x_axis;
        case 2:
            return _y_axis;
        case 3:
            return _z_axis;
    }
}

int _buzzer_B = 5;
int _led_red_R = 1;
int _led_green_R = 2;
int _led_blue_R = 3;
int _led_L = 4;
int _led_R1 = 7;

void setup()
{
    Serial.begin(9600); 
    pinMode(_led_R2, OUTPUT);
    _bmx055_A.begin();
    pinMode(_led_red_R, OUTPUT);
    pinMode(_led_green_R, OUTPUT);
    pinMode(_led_blue_R, OUTPUT);
    pinMode(_led_L, OUTPUT);
    pinMode(_led_R1, OUTPUT);
    item = RGB(0xFF, 0xFF, 0xFF);
    item2 = RGB(120, 120, 120);
}

void loop()
{
    tone(_buzzer_B, 300);
    delay(100);
    noTone(_buzzer_B);
    digitalWrite(_led_R1, HIGH);
    digitalWrite(_led_R2, HIGH);
    digitalWrite(_led_L, HIGH);
    analogWrite(_led_red_R, 0xcc);
    analogWrite(_led_green_R, 0x00);
    analogWrite(_led_blue_R, 0x00);
    
    analogWrite(_led_red_R, 120);
    analogWrite(_led_green_R, 120);
    analogWrite(_led_blue_R, 120);
    
    analogWrite(_led_red_R, RCHANNEL(item));
    analogWrite(_led_green_R, GCHANNEL(item));
    analogWrite(_led_blue_R, BCHANNEL(item));
    
    analogWrite(_led_red_R, RCHANNEL(item2));
    analogWrite(_led_green_R, GCHANNEL(item2));
    analogWrite(_led_blue_R, BCHANNEL(item2));
    
    analogWrite(_led_red_R, 0);
    analogWrite(_led_green_R, 0);
    analogWrite(_led_blue_R, 0);
    
    analogWrite(_led_red_R, 0);
    analogWrite(_led_green_R, 0);
    analogWrite(_led_blue_R, 0);
    
}