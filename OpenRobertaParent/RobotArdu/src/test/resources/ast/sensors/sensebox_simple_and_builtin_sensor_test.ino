// This file is automatically generated by the Open Roberta Lab.
#undef max
#undef min
#define _SENSEBOX_INCLUDES
#include <NEPODefs.h>
#include "RobertaFunctions.h"
#include "SenseBoxMCU.h"
RobertaFunctions rob;
    
unsigned long _time = millis();

bool item;
double item2;
int _potentiometer_P = 3;

BMX055 _bmx055_A;
int _getValueFromBmx(int axis, int mode) {
    int _x_axis;
    int _y_axis;
    int _z_axis;
    switch (mode) {
        case 1:
            _bmx055_A.getAcceleration(&_x_axis, &_y_axis, &_z_axis);
            break;
        case 2:
            _bmx055_A.getRotation(&_x_axis, &_y_axis, &_z_axis);
            break;
        case 3:
            _bmx055_A.getMagnet(&_x_axis, &_y_axis, &_z_axis);
            break;
    }
    switch (axis) {
        case 1:
            return _x_axis;
        case 2:
            return _y_axis;
        case 3:
            return _z_axis;
    }
}

int _button_B = 2;
int _mic_S = 4;
Ultrasonic _hcsr04_U(5, 6);
int _output_L = 1;

void setup()
{
    Serial.begin(9600); 
    _bmx055_A.begin();
    pinMode(_button_B, INPUT);
    item = true;
    item2 = 0;
}

void loop()
{
    item = digitalRead(_button_B);
    item2 = analogRead(_output_L)/10.24;
    item2 = ((double)analogRead(_potentiometer_P))*5/1024;
    item2 = analogRead(_mic_S);
    item2 = _hcsr04_U.getDistance();
    item2 = (int) (millis() - _time);
    _time = millis();
    item2 = _getValueFromBmx(1, 1);
    item2 = _getValueFromBmx(2, 1);
    item2 = _getValueFromBmx(3, 1);
    item2 = _getValueFromBmx(1, 2);
    item2 = _getValueFromBmx(2, 2);
    item2 = _getValueFromBmx(3, 2);
    item2 = _getValueFromBmx(1, 3);
    item2 = _getValueFromBmx(2, 3);
    item2 = _getValueFromBmx(3, 3);
}